use v6.d;
use Test::Async;
use Config::BINDish;
use Config::BINDish::INET;
use IP::Addr;

plan 21;

my $cfg = Config::BINDish.new;

$cfg.read: string => q:to/CFG/, :!strict;
addr4 192.168.0.1;
network-a4 10.13.0.0/16;
network-b4 10.42.1.0/255.255.255.0;
network6 2001:db8:85a3::8a2e:370:7334/49;

url-a https://localhost;
url-b https://docs.raku.org/language/grammar_tutorial;
url-c ftp://ftp.freebsd.org;
CFG

my $top = $cfg.top;

my %IPs =
    addr4 => '192.168.0.1',
    network-a4 => '10.13.0.0/16',
    network-b4 => '10.42.1.0/24',
    network6 => '2001:db8:85a3::8a2e:370:7334/49',
    ;

for %IPs.sort -> (:key($opt), :$value) {
    isa-ok $top.value($opt), IP::Addr, "$opt: IP address is parsed into IP::Addr";
    my $IPver = $opt.substr(*-1);
    is $top.option($opt).value.type-name, 'IPv' ~ $IPver, "$opt: option type name is IPv$IPver";
    is $top.value($opt).gist, $value, "$opt: IP address value";
}

my %URLs =
    url-a => 'https://localhost',
    url-b => 'https://docs.raku.org/language/grammar_tutorial',
    url-c => 'ftp://ftp.freebsd.org';

for %URLs.sort -> (:key($opt), :$value) {
    isa-ok $top.value($opt), Str, "$opt: URL is parsed into Str";
    is $top.option($opt).value.type-name, "URL", "$opt: option type name is 'URL'";
    is $top.value($opt), $value, "$opt: URL value";
}

done-testing;