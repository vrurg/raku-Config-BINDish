=begin pod
=head1 ROLE

C<role Config::BINDish::AST::Container> - common declarations for any kind of value containers

=head1 DESCRIPTION

This role defines the interface and implementation of a container which is characterized by the value it contains and
a type name associated with the value.

=head1 ATTRIBUTES

=head3 L<C<Mu>|https://docs.raku.org/type/Mu> C<$.payload>

The actual value.

This attribute C<handles> all stadndard coercion methods found on L<C<Match>|https://docs.raku.org/type/Match> and
L<C<Str>|https://docs.raku.org/type/Str> classes. So, it is possible to coerce a container like this:

    my Int(Config::BINDish::AST::Container:D) $some-count = $container;

or even easier:

    my Int $some-count = Int($container);

=head3 L<C<Str:D>|https://docs.raku.org/type/Str> C<$.type-name>

The type name describing C<$.payload>. Normally borrowed from
L<C<Config::BINDish::Grammar::Value>|rakudoc:Config::BINDish::Grammar::Value>.

Defaults to I<"any">.

=head1 METHODS

=head3 C<node-name()>

Returns node class C<shortname>.

=head1 COERCIONS

The role supports specialized coercion from
L<C<Config::BINDish::Grammar::Value>|rakudoc:Config::BINDish::Grammar::Value>:

    my Config::BINDish::AST::Container $c = Config::BINDish::AST::Value($grammar-value);

In this case new container's payload and type name are set from corresponding attributes of
L<C<Config::BINDish::Grammar::Value>|rakudoc:Config::BINDish::Grammar::Value>
instance. The C<payload> is obtained using the C<coerced> method of
L<C<Config::BINDish::Grammar::Value>|rakudoc:Config::BINDish::Grammar::Value>.

For any other kind of value it is stored in the C<$.payload> attribute. And the type name is set to lowercased name of
the value's class. The only exception is any of C<Stringy>-consuming class for which the type name is set to
I<"sq-string">.

=head3 C<multi ACCEPTS(Config::BINDish::AST::Container:D $val)>

Matches C<$val.payload> against our C<$.payload>

=head3 C<multi ACCEPTS(Any:D $val)>

Matches C<$val> against our C<$.payload>.

=head1 SEE ALSO

=item L<C<Config::BINDish>|rakudoc:Config::BINDish>
=item L<C<Config::BINDish::AST>|rakudoc:Config::BINDish::AST>
=item L<C<README>|rakudoc:..::README>
=item L<C<INDEX>|rakudoc:..::INDEX>

=head1 COPYRIGHT

(c) 2023, Vadim Belman <vrurg@cpan.org>

=head1 LICENSE

Artistic License 2.0

See the L<I<LICENSE>|file:LICENSE> file in this distribution.

=end pod

