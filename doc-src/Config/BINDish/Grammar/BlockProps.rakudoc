=begin pod
=head1 NAME

C<Config::BINDish::Grammar::BlockProps> - block statement properties

=head1 DESCRIPTION

Does
L<C<Config::BINDish::Grammar::StatementProps>|rakudoc:Config::BINDish::Grammar::StatementProps>,
L<C<Config::BINDish::Grammar::ContainerProps>|rakudoc:Config::BINDish::Grammar::ContainerProps>,
L<C<Config::BINDish::Grammar::DeclarationProps>|rakudoc:Config::BINDish::Grammar::DeclarationProps>.

=head1 ATTRIBUTES

=head3 L<C<Bool>|https://docs.raku.org/type/Bool> C<$.named>

If I<True> then block must have a name.

=head3 L<C<Bool>|https://docs.raku.org/type/Bool> C<$.classified>

If I<True> then block must have a class. Only makes sense when C<$.named> is I<True>.

=head3 L<C<Bool>|https://docs.raku.org/type/Bool> C<$.value-only>

If I<True> then block can only contain values. For example:

    acl "local-net" allowed {
        192.168.42.0/24; 192.168.13.0/24;
        default-gw 192.168.1.1; # Context error, option cannot be used here
    }

=head1 METHODS

=head3 C<values()>

Coerces C<$.default> attribute to L<C<List>|https://docs.raku.org/type/List> and returns it. If the attribute is not set
then returns an empty list.

=head1 SEE ALSO

L<C<Config::BINDish>|rakudoc:Config::BINDish>,
L<C<Config::BINDish::Grammar>|rakudoc:Config::BINDish::Grammar>,
L<C<Config::BINDish::Grammar::OptionProps>|rakudoc:Config::BINDish::Grammar::OptionProps>

=head1 AUTHOR

Vadim Belman <vrurg@cpan.org>

=end pod

