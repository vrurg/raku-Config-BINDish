=begin pod
=head1 VERSIONS

=head v0.0.15

=item Fix some issues with exceptions
=item Set version of generated extension classes to compiler's default

=head v0.0.14

=item Fix testing on Windows platforms where there is no $HOME

=head v0.0.13

=item Make macro expansion work for option default value
=item Add support for environment variables in macro expansion

=head v0.0.12

=item A new C<no-values> block property in pre-declarations to declare option-only blocks
=item Implemented value constraints via a new C<where> pre-declaration property
=item Fixed a race condition which allowed for non-values to be parsed as values
=item Fixed a problem when a type cannot coerce from a C<Match> object

=head v0.0.11

=item Fix C<AttrX::Mooish> dependency version

=head v0.0.10'

=item Added support for classified blocks for `:in` key of block and option declarations

=head v0.0.9

=item Fix node dumping
=item Fix expandable strings not considered standalone values
=item C<find-all> results sequence is not lazy anymore
=item Make dump output a little bit prettier

=head v0.0.8

=item Fix parsing of paths of C<dir/path> kind in value only blocks
=item Fix a copypasto in export of ASCII version of C<::> operator
=item Some improvements in error reporting

=head v0.0.7

=item Change some identity/value methods from returning an `AST::Container` to its value instead [b7ece317](https://github.com/vrurg/raku-Config-BINDish/commit/b7ece3173f156e94c8d42d3a12edc44cd33b8b26)
=item Use more legit approach in registering phasers

=head v0.0.6

Bugfix release:

=item Moved `Test::Async` dependency from `test-depends` into `depends`
=item Fixed boolean values conflicting and racing with keywords. Booleans now have higher-priority over keywords
=item Fix wrong line number reported for errors pointing at a line start
=item Fixed `Expandable` loosing values and causing weird parsing errors

=head v0.0.5

=item Added support for default values
=item Multi-option queries
=item Request operator(s): `∷` and `::`
=item Clarified `.get` API
=item Minor technical cleanups

=head2 v0.0.4

=item Added support for context-dependent declarations.

This is a major change in the module logic. Whereas the previous versions considered each pre-declared keyword unique
per its type (i.e. per options or blocks) and per configuration, they can now be made unique per individual block. See
L<C<Config::BINDish::Grammar>|docs/md/Config/BINDish/Grammar.md>
for more information.

=item Added two implicitly pre-declared blocks: C<.TOP> and C<.ANYWHERE>
=item L<C<Config::BINDish::Grammar::StatementProps>|docs/md/Config/BINDish/Grammar/StatementProps.md>
attribute C<$.top-only> is deprecated;
C«:in<.TOP>» must be used instead of C<:top-only> in a statement properties hash
=item L<C<Config::BINDish::Grammar::Strictness>|docs/md/Config/BINDish/Grammar/Strictness.md>
got one more mode: C<warnings>
=item L<C<Config::BINDish::INET>|docs/md/Config/BINDish/INET.md> extension now sets C<$*CFG-VALUE>
=item Fixed some error reports
=item Improved handling of context leaving

=head2 v0.0.3

=item Implemented support for `include`, see README for more details
=item Implemented support for `#line` directive, see README too
=item Internal: replaced an explicit context stack with `$*CFG-CTX` on call stack
=item Methods `push-ctx` and `pop-ctx` are gone; method `enter-ctx` is introduced

https://github.com/vrurg/raku-Config-BINDish/commit/b9b4fd97af431dae703e3b6d7c3afd5cfe8e195f contains detailed
list of changes.

=head2 v0.0.2

=item Implemented grammar value type (C«value:sym<type>») specification
=item Replaced dot (C<.>) separator with slash (C</>) in macros: C<"{block.option}"> is now C<"{block/option}">
=item Implemented parent block reference in macros: C<"{../../option}">
=item Added a new standard value type: file path
=item API version bumped to v0.0.2

=end pod
